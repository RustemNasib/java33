package lesson_10.interfaces;

public class Main {
    public static void main(String[] args) {
        /**
         * Виды классов:
         * Класс - содержит поля, конструкторы и методы
         * Абстрактный класс - такой же как обычный класс, но мы не можем создать его объект.
         *                   - могут быть абстрактные методы, могут не быть
         * Интерфейс - такой же как обычный класс, но мы не можем создать его объект
         *           - все методы только абстрактные
         *           - все поля public static final. static - общая, final - не изменяемые
         *           Интерфейс - это как требования, например
         *           _________ Samsung______________________________
         *     Фотокамера               Файловый менеджер         Органайзер
         *     - Сделать фото           - Удалить файл
         *     - Сделать видео          - Переименовать файл
         *                              - Переместить файл
         *     Если класс - это как техническая документация к будущему объекты.
         *     То интерфейс  - как тех. задание к техническому проекту (документации)
         *
         * Interface — ключевое слово для создания интерфейса в Java
         * Создать экземпляр интерфейса в Java нельзя
         * Интерфейс обеспечивает абсолютную абстракцию
         * Интерфейсы не могут иметь конструкторов, потому что мы не можем создать экземпляр интерфейса
         * По умолчанию любой атрибут интерфейса является public, static и final, так что нам не нужно определять модификаторы доступа к атрибутам
         * По умолчанию методы интерфейса неявно abstract и public
         * Интерфейс в Java не может быть подклассом у другого класса, но он может реализовать другой интерфейс
         * Ключевое слово implements используется классами для реализации интерфейса
         * Класс, реализующий интерфейс, должен обеспечить реализацию всех его метода, если только это не абстрактный класс
         *
         * Enum
         * Внутренний безымянный класс
         * Анонимный класс
         */
    }
}
